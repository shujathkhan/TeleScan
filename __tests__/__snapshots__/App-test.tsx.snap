// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App App 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      forwardedRef={[Function]}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="pop"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        hidden={false}
        hideBackButton={false}
        hideShadow={false}
        largeTitleHideShadow={false}
        title="All Contacts"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            undefined,
          ]
        }
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          style={
            Object {
              "backgroundColor": "#FFFBDF",
              "flexDirection": "column",
              "flexGrow": 1,
              "minHeight": 70,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "elevation": 3,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 5,
                "padding": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 15,
                }
              }
            >
              Showing 
              0
               contacts
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Image
              source={
                Object {
                  "process": [Function],
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "marginVertical": 20,
                }
              }
            >
              <Text
                style={
                  Object {
                    "fontSize": 15,
                  }
                }
              >
                No contacts to display
              </Text>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "blue",
                      "fontSize": 15,
                      "fontWeight": "700",
                    }
                  }
                >
                  Sync device contacts
                </Text>
              </View>
            </View>
          </View>
        </RCTSafeAreaView>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;

exports[`renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      forwardedRef={[Function]}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="pop"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        hidden={false}
        hideBackButton={false}
        hideShadow={false}
        largeTitleHideShadow={false}
        title="All Contacts"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            undefined,
          ]
        }
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          style={
            Object {
              "backgroundColor": "#FFFBDF",
              "flexDirection": "column",
              "flexGrow": 1,
              "minHeight": 70,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "elevation": 3,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 5,
                "padding": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 15,
                }
              }
            >
              Showing 
              0
               contacts
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Image
              source={
                Object {
                  "process": [Function],
                }
              }
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "marginVertical": 20,
                }
              }
            >
              <Text
                style={
                  Object {
                    "fontSize": 15,
                  }
                }
              >
                No contacts to display
              </Text>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "blue",
                      "fontSize": 15,
                      "fontWeight": "700",
                    }
                  }
                >
                  Sync device contacts
                </Text>
              </View>
            </View>
          </View>
        </RCTSafeAreaView>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
